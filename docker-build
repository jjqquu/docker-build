#!/bin/bash

set -e

# The docker repo.
REPO="${DOCKER_REGISTRY_USERNAME:-$CIRCLE_PROJECT_USERNAME}/${DOCKER_REGISTRY_REPONAME:-$CIRCLE_PROJECT_REPONAME}"
CACHE_PREFIX="cache"

# Usage prints the help for this command.
usage() {
  echo "Usage:"
  echo "    docker-build command <docker build args>"
  echo ""
  echo "Commands:"
  echo "    build  Build a docker image from this repo and tag it with the git sha and branch"
  echo "    push   Push the built image to the docker registry. \$DOCKER_EMAIL, \$DOCKER_USER, and \$DOCKER_PASS are required"
  echo "    pull   Pull the cached image from the docker registry. \$DOCKER_EMAIL, \$DOCKER_USER, and \$DOCKER_PASS are required"
  exit 2
}

# Login to repository
login() {
  if [ -z "$DOCKER_EMAIL" ] || [ -z "$DOCKER_USER" ] || [ -z "$DOCKER_PASS" ]; then
    usage
  fi

  docker login -e "$DOCKER_EMAIL" -u "$DOCKER_USER" -p "$DOCKER_PASS"
}

# Build builds the docker image and tags it with the git sha and branch.
build() {
  declare repo="$1" sha="$CIRCLE_SHA1" branch="$CIRCLE_BRANCH"
  shift
  declare tag=`git describe --tags --exact-match $CIRCLE_SHA1 2>/dev/null`
  docker build "$@" -t "$repo" .
  docker tag "$repo" "${repo}:${sha}"
  docker tag "$repo" "${repo}:${branch}"
  docker tag -f "$repo" "${repo}:${CACHE_PREFIX}-${branch}"
  if [ -n "$tag" -a "$branch" != "$tag" ]; then
    docker tag -f "$repo" "${repo}:${tag}"
  fi
}

# Push pushes all of the built docker images.
push() {
  declare repo="$1" registry="$2"

  if [ -n "$registry" ]; then
    repo=$registry/$repo
  fi

  login
  docker push "$repo"
}

# Pull pulls the built docker image for the branch.
pull() {
  declare repo="$1" registry="$2" branch="$CIRCLE_BRANCH"

  if [ -n "$registry" ]; then
    repo=$registry/$repo
  fi

  login
  docker pull "$repo:${CACHE_PREFIX}-$branch"
}
case "$1" in
  "build")
    shift
    build "$REPO" "$@"
    ;;
  "push")
    push "$REPO" "$DOCKER_REGISTRY"
    ;;
  "pull")
    pull "$REPO" "$DOCKER_REGISTRY"
    ;;
  *)
    usage
    ;;
esac
